{"name": "test_checout_process_personal_info[test_loginMulUsers0]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: element is not present", "trace": "self = <tests.test_swag_lab_sorting.TestLogin object at 0x000002087ABDB940>, test_loginMulUsers = ('standard_user', 'secret_sauce')\n\n    @pytest.mark.parametrize(\"test_loginMulUsers\", [\n        {\"username\": \"standard_user\", \"pwd\": \"secret_sauce\"}\n    ], indirect=True)\n    def test_checout_process_personal_info(self, test_loginMulUsers):\n        try:\n            name, pwd = test_loginMulUsers\n            swagloginPageObject = SwagLabLoginPage(self.driver, self.filePath)\n            swagloginPageObject.navigateToApplication(ConfigReaderUtil.get_env_value('baseUrl'))\n            swagloginPageObject.enterUserName(name)\n            swagloginPageObject.enterPassword(pwd)\n            inventorypage = swagloginPageObject.click_login_button()\n            loginsuccess = inventorypage.verifyInventoryPage()\n            assert loginsuccess is True\n            inventorypage.clik_addtocart_lick()\n            inventorypage.clik_cart_icon()\n            inventorypage.clik_checkout_button()\n            checkouPageNavigation = inventorypage.verifyCheckoutPageNavigation()\n            assert checkouPageNavigation is True\n            inventorypage.enterFirstName(\"Bhakti\")\n            inventorypage.enterLastName(\"Agashe\")\n            inventorypage.enterZip(\"411045\")\n            inventorypage.clik_continue_button()\n            inventorypage.clik_cart_icon()\n            inventorypage.clik_remove_button()\n            carthasitems = inventorypage.verifY_cart_empty()\n            assert carthasitems is False\n            inventorypage.clik_main_menu()\n            time.sleep(3)\n            inventorypage.clik_logout_lick()\n    \n        except WebDriverException as e:\n            BaseTest.take_screenshot(self, e.msg)\n>           raise e\n\ntest_swag_lab_sorting.py:279: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntest_swag_lab_sorting.py:265: in test_checout_process_personal_info\n    inventorypage.enterFirstName(\"Bhakti\")\n..\\pages\\swag_inventory_page.py:97: in enterFirstName\n    BasePage.entertext(self, By.XPATH, self.locator.SwagInventoryPage.CHECKOUT_PAGE_FIRST_NAME, firstName)\n..\\webdriver\\WebdriverBasePage.py:39: in entertext\n    raise e\n..\\webdriver\\WebdriverBasePage.py:31: in entertext\n    self.elementWaitCondition(byelement, byindentifier)\n..\\webdriver\\WebdriverBasePage.py:26: in elementWaitCondition\n    self.web_driver_wait.until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"f7f5901af91a5f245ddcf96265440033\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x000002087ACA7790>, message = 'element is not present'\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: element is not present\n\n..\\venv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException"}, "attachments": [{"name": "screenshot", "source": "4156f88d-fbf4-4137-acf6-f2a9ae89a206-attachment.png", "type": "image/png"}, {"name": "stdout", "source": "1751501c-a51e-4e53-aa86-53e334e23186-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test_loginMulUsers", "value": "{'username': 'standard_user', 'pwd': 'secret_sauce'}"}], "start": 1651322485079, "stop": 1651322522630, "uuid": "f925c151-5e26-47a0-95f2-adb925c979b1", "historyId": "988d28fd8f1fac47c36c63c7533f0378", "testCaseId": "e14b0a1618b597b426454fe3522acf94", "fullName": "tests.test_swag_lab_sorting.TestLogin#test_checout_process_personal_info", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('driver_get', 'create_logger_file', 'test_data', 'test_XML_data')"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_swag_lab_sorting"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "IN3055478W1"}, {"name": "thread", "value": "12996-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_swag_lab_sorting"}]}